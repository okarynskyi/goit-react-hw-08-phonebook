{"version":3,"file":"static/js/996.e44adda0.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.jsx","redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"list_button\":\"ContactList_list_button__SJAXA\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport {\n  selectContacts,\n  selectError,\n  selectFilter,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { fetchContacts, deleteContact } from 'redux/contacts/contactsOperations';\nimport css from './ContactList.module.css'; \n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getFilterContacts = () => {\n    if (!filter) {\n      return contacts;\n    }\n    const normalizedFilter = filter.toLocaleLowerCase();\n    const filterContacts = contacts.filter(({ name, number }) => {\n      const normalizedName = name.toLocaleLowerCase();\n      const normalizedNumber = number.toLocaleLowerCase();\n      const result = normalizedName.includes(normalizedFilter) || normalizedNumber.includes(normalizedFilter);\n      return result\n    });\n    return filterContacts;\n  };\n  const filteredContacts = getFilterContacts();\n\n  const elements = filteredContacts.map(({ name, number, id }) => {\n        return <li key={id} className={css.list}>{name}: {number}\n            <button onClick={() => dispatch(deleteContact(id))} className={css.list_button}>Delete</button>\n        </li>\n  })\n  \n  return (\n    <div>\n      {isLoading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n      {contacts.length > 0 && <ul>{elements}</ul>}\n    </div>\n  )  \n}\n","import { useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleChange = (e) => {\n    const { name } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n      case 'number':\n        setNumber(e.currentTarget.value);\n        break;\n      default:\n        break;\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const isDuplicate = contacts.find(\n      contact => contact.name.toLocaleLowerCase() === name.toLocaleLowerCase()\n    );\n    if (isDuplicate) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <div className={css.input}>\n        <label className={css.input_label}>Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={name}\n          onChange={handleChange}\n          required\n          className={css.input_text}\n        />\n      </div>\n      <div className={css.input}>\n        <label className={css.input_label}>Number</label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          value={number}\n          onChange={handleChange}\n          required\n          className={css.input_text}\n        />\n      </div>\n      <button type=\"submit\" className={css.input_button}>Add contact</button>\n    </form>\n  )\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\",\"input_text\":\"Filter_input_text__XAzxJ\"};","import { nanoid } from '@reduxjs/toolkit';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { visibleContacts } from 'redux/contacts/filterSlice';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n    const filterId = nanoid();\n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n\n    const handleChange = e => {\n        dispatch(visibleContacts(e.target.value));\n    };\n\n    return (\n        <label htmlFor={filterId} className={css.input}>Find contacts by name\n            <input type=\"text\" id = {filterId} name=\"filter\" value={filter} onChange={handleChange} className={css.input_text}/>\n        </label>\n    )\n}\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { Filter } from 'components/Filter/Filter';\n// import { Box } from 'components/Box';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <div>\n        <ContactForm />\n        <Filter />\n      </div>\n      <ContactList />\n    </div>\n  );\n}","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"input\":\"ContactForm_input__Bl93P\",\"input_label\":\"ContactForm_input_label__s6Ji+\",\"input_text\":\"ContactForm_input_text__1yM8V\",\"input_button\":\"ContactForm_input_button__y14MV\"};"],"names":["ContactList","contacts","useSelector","selectContacts","isLoading","selectIsLoading","error","selectError","filter","selectFilter","dispatch","useDispatch","useEffect","fetchContacts","elements","normalizedFilter","toLocaleLowerCase","name","number","normalizedName","normalizedNumber","includes","getFilterContacts","map","id","className","css","onClick","deleteContact","length","ContactForm","useState","setName","setNumber","handleChange","e","currentTarget","value","onSubmit","preventDefault","find","contact","alert","addContact","type","pattern","title","onChange","required","Filter","filterId","nanoid","htmlFor","visibleContacts","target","Tasks","state","items"],"sourceRoot":""}